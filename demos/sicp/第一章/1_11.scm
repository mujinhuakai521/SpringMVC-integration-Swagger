(define (f n)
	(cond ((< n 3) n)
	      (else (+ (f (- n 1))
                       (* 2 (f (- n 2)))
                       (* 3 (f (- n 3)))
                    )
              )
        )
)
;f(n) = f(n-1) + 2*f(n-2) + 3*f(n-3)
;f(n) = 3*f(n-3) + 2*f(n-1) + f(n-1)
;d = 3*a + 2*b + c
(define (f2 n)
	(define (f2-iter a b c count)
                (cond ((= count 0) a)
		      (else (f2-iter b c  (+ (* 3 a)
    			                     (* 2 b)
                                             c
                                          )
				          (- count 1)
                             )  
                       )
                 )
        )
	(f2-iter 0 1 2 n)
)
