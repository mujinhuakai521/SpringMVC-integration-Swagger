(define (make-point x y)
        (cons x y)
)
(define (x-point p)
        (car p)
)
(define (y-point p)
        (cdr p)
)
(define (print-point p)
        (display "(")
        (display (x-point p))
        (display ",")
        (display (y-point p))
        (display ")")
)

(define (make-segment start-point end-point)
        (cons start-point end-point)
)
(define (start-segment l)
        (car l)
)
(define (end-segment l)
        (cdr l)
)
(define (midpoint-segment l)
        (let ((start-p (start-segment l))
              (end-p (end-segment l))
            )
            (make-point
              (/ (+ (x-point start-p) (x-point end-p)) 2)
              (/ (+ (y-point start-p) (y-point end-p)) 2)
            )
        )
)

(define (print-segment l)
        (display "(")
        (print-point (start-segment l))
        (display ",")
        (print-point (end-segment l))
        (display ")")
)
